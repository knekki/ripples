!function(e){function t(s){if(i[s])return i[s].exports;var r=i[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var i={};t.m=e,t.c=i,t.d=function(e,i,s){t.o(e,i)||Object.defineProperty(e,i,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,i){if(1&i&&(e=t(e)),8&i)return e;if(4&i&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&i&&"string"!=typeof e)for(var r in e)t.d(s,r,function(t){return e[t]}.bind(null,r));return s},t.n=function(e){var i=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(i,"a",i),i},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=0)}([function(e,t,i){"use strict";i.r(t);class s{constructor(e,{color:t,colorOut:i}={}){if(r.has(e))return r.get(e);if(!(e instanceof HTMLElement))throw new Error("Can only construct Ripple with an instance of HTMLElement.");this.el=e,this.active=[],this.color=t,this.colorOut=i,this.effectNode=document.createElement("span"),this.bind(),r.push(this)}bind(){const e=getComputedStyle(this.el);e&&("static"==e.getPropertyValue("position")&&(this.el.dataset.ripplePrevPosition="static",this.el.style.position="relative"),"inline"==e.getPropertyValue("display")&&(this.el.dataset.ripplePrevDisplay="inline",this.el.style.display="inline-block")),this.el.addEventListener("mousedown",this,{passive:!0}),this.el.addEventListener("touchstart",this,{passive:!0}),this.el.addEventListener("dragstart",this,{passive:!0}),this.el.addEventListener("mouseup",this,{passive:!0}),this.el.addEventListener("mouseleave",this,{passive:!0}),this.el.addEventListener("touchend",this,{passive:!0}),this.el.addEventListener("touchcancel",this,{passive:!0})}get color(){return this.__color}set color(e){this.__color=e||this.el.dataset.ripple||this.colorLegibility}get colorLegibility(){const{backgroundColor:e}=getComputedStyle(this.el),t=e.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);return!t||186<.299*t[1]+.587*t[2]+.114*t[3]?"#000000":"#ffffff"}get colorOut(){return this.__colorOut}set colorOut(e){this.__colorOut=e||this.el.dataset.rippleOut||this.color||this.colorLegibility}get effectNode(){return this.__effectNode.cloneNode(!0)}set effectNode(e){const t=e.cloneNode(!1);Object.assign(e.style,{position:"absolute",top:0,right:0,bottom:0,left:0,opacity:.32,pointerEvents:"none",borderRadius:"inherit",overflow:"hidden",contain:"strict"}),Object.assign(t.style,{position:"absolute",borderRadius:"50%",transform:"scale(0)",transformOrigin:"center center",transition:"transform 300ms ease-out, opacity 300ms ease-out, background 300ms ease-in",willChange:"transform, opacity"}),e.appendChild(t),this.__effectNode=e}handleEvent(e){switch(e.type){case"mousedown":case"touchstart":this.show(e);break;default:this.hide(e)}}hide(){if(this.active.length){const e=this.active[0];e.children[0].style.opacity=0,this.active.splice(0,1),setTimeout(()=>{e.parentNode&&e.parentNode.removeChild(e)},300)}}remove(){return r.remove(this)}show(e){var t=Math.min,i=Math.pow,s=Math.max;if(null!=this.el.getAttribute("disabled"))return;const[{offsetX:r,offsetY:o},{width:n,height:l}]=[e,this.el.getBoundingClientRect()],[a,c]=[s(r,n-r),s(o,l-o)],d=Math.sqrt(i(s(a,c),2)+i(t(a,c),2)),h=t(64/(2*d),1),u=this.effectNode;Object.assign(u.children[0].style,{top:`${o-d}px`,left:`${r-d}px`,height:`${2*d}px`,width:`${2*d}px`,background:this.colorLegibility,backgroundColor:this.color,boxShadow:`0 0 40px 0 ${this.color}`,transform:`scale(${h})`}),this.el.appendChild(u),this.active.push(u),requestAnimationFrame(()=>{u.children[0].style.transform="scale(1.25)",this.color!=this.colorOut&&(u.children[0].style.backgroundColor=this.colorOut)})}unbind(){"static"==this.el.dataset.ripplePrevPosition&&(this.el.removeAttribute("data-ripple-prev-position"),this.el.style.position="static"),"inline"==this.el.dataset.ripplePrevDisplay&&(this.el.removeAttribute("data-ripple-prev-display"),this.el.style.display="inline"),this.el.removeEventListener("mousedown",this),this.el.removeEventListener("touchstart",this),this.el.removeEventListener("touchend",this),this.el.removeEventListener("touchcancel",this),this.el.removeEventListener("mouseup",this),this.el.removeEventListener("mouseleave",this),this.el.removeEventListener("dragstart",this)}}var r=window.RippleRegister=new class extends Array{static get[Symbol.species](){return Array}add(e,t){return new s(e,t)}bindAll(e=document.body){e.querySelectorAll("[data-ripple]").forEach(e=>this.add(e))}get(e){return this.find(t=>e instanceof s?t===e:t.el===e)}has(e){return!!this.get(e)}remove(e){if(this.has(e)){const t=this.get(e);return t.unbind(),this.splice(this.indexOf(t),1),!0}return!1}unbindAll(e=document.body){e.querySelectorAll("[data-ripple]").forEach(e=>this.remove(e))}};i.d(t,"RippleRegister",(function(){return r})),i.d(t,"Ripple",(function(){return s})),new MutationObserver(e=>{for(const t of e)"childList"==t.type?(t.addedNodes.forEach(e=>{1===e.nodeType&&(null==e.dataset.ripple?r.bindAll(e):new s(e))}),t.removedNodes.forEach(e=>{1===e.nodeType&&(r.has(e)?r.remove(e):r.unbindAll(e))})):"attributes"==t.type&&r.has(t.target)&&("data-ripple"==t.attributeName&&(r.get(t.target).color=t.target.dataset.ripple),"data-ripple-out"==t.attributeName&&(r.get(t.target).colorOut=t.target.dataset.rippleOut))}).observe(document.body,{attributes:!0,childList:!0,subtree:!0}),r.bindAll(),t.default={RippleRegister:r,Ripple:s}}]);